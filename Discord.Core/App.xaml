<Application x:Class="Discord.Core.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Discord.Core"
             StartupUri="Windows/LoginWindow.xaml">
    <Application.Resources>

        <!-- Colors -->

        <SolidColorBrush x:Key="Gray">#F6F6F7</SolidColorBrush>
        <SolidColorBrush x:Key="GrayMiddle">#B7B9BC</SolidColorBrush>
        <SolidColorBrush x:Key="Dark">#222428</SolidColorBrush>
        <SolidColorBrush x:Key="LightBlue">#7289DA</SolidColorBrush>
        <SolidColorBrush x:Key="Blue">#7289DA</SolidColorBrush>
        <SolidColorBrush x:Key="BlueFocused">#677BC4</SolidColorBrush>
        <SolidColorBrush x:Key="BluePressed">#5B6EAE</SolidColorBrush>
        <SolidColorBrush x:Key="DarkGray">#64686F</SolidColorBrush>
        <SolidColorBrush x:Key="Red">#F04747</SolidColorBrush>
        <SolidColorBrush x:Key="MediumGray">#40444B</SolidColorBrush>
        <SolidColorBrush x:Key="BlackGray">#202225</SolidColorBrush>

        <!-- Force styles -->

        <Style x:Key="DarkWindowStyle" TargetType="Window">
            <Setter Property="Background" Value="#36393F"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontFamily" Value="/Discord.Core;component/Resources/Fonts/Whitney/#Whitney Medium"/>
        </Style>

        <Style TargetType="Image">
            <Setter Property="RenderOptions.BitmapScalingMode"
                    Value="Fant" />
            <Setter Property="RenderOptions.EdgeMode"
                    Value="Aliased" />
        </Style>
        <Style x:Key="ScrollBarLineButtonStyle"
               TargetType="{x:Type RepeatButton}">
            <Setter Property="Focusable"
                    Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Canvas Height="18">
                            <!--<Polygon Fill="{StaticResource MediumGray}"
                                     Points="3,15 15,15 9,3"></Polygon>-->
                        </Canvas>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarLineButtonBottomStyle"
               TargetType="{x:Type RepeatButton}">
            <Setter Property="Focusable"
                    Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Canvas Height="18">
                            <!--<Polygon Fill="{StaticResource MediumGray}"
                                     Points="3,3 9,15 15,3"></Polygon>-->

                        </Canvas>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarPageButtonStyle"
               TargetType="{x:Type RepeatButton}">
            <Setter Property="IsTabStop"
                    Value="False" />
            <Setter Property="Focusable"
                    Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border BorderBrush="Transparent"></Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarThumbStyle"
               TargetType="{x:Type Thumb}">
            <Setter Property="IsTabStop"
                    Value="False" />
            <Setter Property="Focusable"
                    Value="False" />
            <Setter Property="Margin"
                    Value="1,0,1,0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border Background="{StaticResource MediumGray}" Width="8" CornerRadius="5"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="VerticalScrollBar"
                         TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition MaxHeight="18" />
                    <RowDefinition Height="*" />
                    <RowDefinition MaxHeight="18" />
                </Grid.RowDefinitions>

                <RepeatButton Grid.Row="0"
                              Height="18"
                              Style="{StaticResource ScrollBarLineButtonStyle}"
                              Command="ScrollBar.LineUpCommand">
                </RepeatButton>
                <Track Name="PART_Track"
                       Grid.Row="1"
                       IsDirectionReversed="True">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="ScrollBar.PageUpCommand"
                                      Style="{StaticResource ScrollBarPageButtonStyle}">
                        </RepeatButton>
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumbStyle}">
                        </Thumb>
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="ScrollBar.PageDownCommand"
                                      Style="{StaticResource ScrollBarPageButtonStyle}">
                        </RepeatButton>
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Row="3"
                              Height="18"
                              Style="{StaticResource ScrollBarLineButtonBottomStyle}"
                              Command="ScrollBar.LineDownCommand">
                </RepeatButton>
            </Grid>
        </ControlTemplate>

        <Style TargetType="{x:Type ScrollBar}">
            <Setter Property="Template"
                    Value="{StaticResource VerticalScrollBar}" />
        </Style>

        <!-- Styles -->

        <Style x:Key="RoundTextBoxStyle"
               TargetType="TextBox">
            <Setter Property="Background"
                    Value="#303339" />
            <Setter Property="Height"
                    Value="42" />
            <Setter Property="FontSize"
                    Value="16" />
            <Setter Property="VerticalContentAlignment"
                    Value="Center" />
            <Setter Property="Foreground"
                    Value="#C3C4C6" />
            <Setter Property="Padding"
                    Value="7" />
            <Style.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius"
                            Value="6" />
                </Style>
            </Style.Resources>
            <Style.Triggers>
                <Trigger Property="IsFocused"
                         Value="False">
                    <Setter Property="BorderBrush"
                            Value="{StaticResource Dark}" />
                </Trigger>
                <Trigger Property="IsFocused"
                         Value="True">
                    <Setter Property="BorderBrush"
                            Value="{StaticResource LightBlue}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="RoundWhiteTextBoxStyle"
               TargetType="TextBox">
            <Setter Property="Height"
                    Value="42" />
            <Setter Property="FontSize"
                    Value="16" />
            <Setter Property="VerticalContentAlignment"
                    Value="Center" />
            <Setter Property="Padding"
                    Value="7" />
            <Style.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius"
                            Value="6" />
                </Style>
            </Style.Resources>
        </Style>

        <Style x:Key="MessageTextBoxStyle"
               TargetType="TextBox">
            <Setter Property="Background"
                    Value="#303339" />
            <Setter Property="MinHeight"
                    Value="42" />
            <Setter Property="FontSize"
                    Value="16" />
            <Setter Property="VerticalContentAlignment"
                    Value="Center" />
            <Setter Property="Foreground"
                    Value="#C3C4C6" />
            <Setter Property="Padding"
                    Value="7" />
            <Setter Property="BorderThickness"
                    Value="0" />
            <Setter Property="TextWrapping"
                    Value="Wrap" />
            <Style.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius"
                            Value="10" />
                </Style>
            </Style.Resources>
        </Style>

        <Style x:Key="RoundButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource Blue}"/>
            <Setter Property="Height" Value="42"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Padding" Value="7"/>
            <Setter Property="FontFamily" Value="/Discord.Core;component/Resources/Fonts/Whitney/#Whitney" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="Border" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <!--<Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource BlueFocused}" TargetName="Border" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{StaticResource BluePressed}" TargetName="Border" />
                            </Trigger>-->

                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver"
                                               Value="True" />
                                    <Condition Property="IsEnabled"
                                               Value="True" />
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter Property="Background"
                                            Value="{StaticResource BlueFocused}"
                                            TargetName="Border" />
                                </MultiTrigger.Setters>
                            </MultiTrigger>

                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver"
                                               Value="False" />
                                    <Condition Property="IsEnabled"
                                               Value="True" />
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter Property="Background"
                                            Value="{StaticResource BluePressed}"
                                            TargetName="Border" />
                                </MultiTrigger.Setters>
                            </MultiTrigger>

                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsEnabled"
                                               Value="False" />
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter Property="Background"
                                            Value="{StaticResource DarkGray}"
                                            TargetName="Border" />
                                </MultiTrigger.Setters>
                            </MultiTrigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="3"/>
                </Style>
            </Style.Resources>
        </Style>

        <Style x:Key="CircleButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource MediumGray}"/>
            <Setter Property="Height" Value="45"/>
            <Setter Property="Width" Value="45"/>
            <Setter Property="FontSize" Value="45"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="Border"
                                Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver"
                                     Value="True">
                                <Setter Property="Background"
                                        Value="{StaticResource BlueFocused}"
                                        TargetName="Border" />
                            </Trigger>
                            <Trigger Property="IsPressed"
                                     Value="True">
                                <Setter Property="Background"
                                        Value="{StaticResource BluePressed}"
                                        TargetName="Border" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="15"/>
                </Style>
            </Style.Resources>
        </Style>

    </Application.Resources>
</Application>
